{"version":3,"sources":["./apps/demos/src/app/features/template/render-callback/render-callback.module.ts","./apps/demos/src/app/features/template/render-callback/render-callback.routes.ts","./apps/demos/src/app/features/template/render-callback/render-callback.component.ts"],"names":[],"mappings":"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","file":"render-callback-render-callback-module.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { RouterModule } from '@angular/router';\nimport { DirtyChecksModule } from '../../../shared/debug-helper/dirty-checks/index';\nimport { RenderCallbackComponent } from './render-callback.component';\nimport { RENDER_CALLBACK_ROUTES } from './render-callback.routes';\nimport { MatButtonModule } from '@angular/material/button';\nimport { UnpatchEventsModule } from '@rx-angular/template';\nimport { PushModule, RxLetModule } from '../../../rx-angular-pocs';\n\n@NgModule({\n  declarations: [\n    RenderCallbackComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(RENDER_CALLBACK_ROUTES),\n    MatProgressSpinnerModule,\n    MatDividerModule,\n    DirtyChecksModule,\n    MatButtonModule,\n    UnpatchEventsModule,\n    PushModule,\n    RxLetModule\n  ]\n})\nexport class RenderCallbackModule {}\n","import { Routes } from '@angular/router';\nimport { RenderCallbackComponent } from './render-callback.component';\n\n\nexport const RENDER_CALLBACK_ROUTES: Routes = [\n  {\n    path: '',\n    component: RenderCallbackComponent,\n  },\n];\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { concat, Subject } from 'rxjs';\nimport { map, scan, shareReplay, startWith, switchMap, switchMapTo, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'rxa-render-callback',\n  template: `\n    <h1 class=\"mat-header\">Render Callback</h1>\n    <h4 class=\"mat-subheader\">Height calculation using rendered$ Event</h4>\n    <button mat-raised-button [unpatch] (click)=\"updateClick.next()\">Update content</button>\n    <div class=\"example-results\">\n      <div class=\"example-result\">\n        <h4>Calculated after renderCallback</h4>\n        <strong>{{ (\n                     calculatedAfterRender$ | push\n                   ) + 'px' }}</strong>\n      </div>\n      <div class=\"example-result\">\n        <h4>Calculated after value changed</h4>\n        <strong>{{ (\n                     calculatedAfterValue$ | push\n                   ) + 'px' }}</strong>\n      </div>\n    </div>\n    <h4>Value</h4>\n    <div class=\"example-value p-4\">\n      <ng-container *rxLet=\"content$; strategy: 'chunk'; let content; renderCallback: rendered$\">\n        <div id=\"box\" class=\"example-box\">\n          {{ content }}\n        </div>\n      </ng-container>\n      <!-- TEMPLATE SYNTAX:\n      <ng-template let-content\n                   [rxLet]=\"content$\"\n                   [rxLetStrategy]=\"'chunk'\"\n                   (rendered)=\"rendered$.next($event)\">\n        <div id=\"box\" class=\"example-box\">\n          {{ content }}\n        </div>\n      </ng-template>-->\n    </div>\n  `,\n  styles: [\n    `\n      .example-value {\n        width: 400px;\n        max-height: 500px;\n        overflow: auto;\n      }\n\n      .example-results {\n        display: flex;\n        width: 100%;\n        justify-content: space-evenly;\n        margin-bottom: 3rem;\n      }\n\n      .example-result {\n        flex-grow: 1;\n      }\n\n      .example-box {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 300px;\n        outline: 1px solid red;\n      }\n    `\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RenderCallbackComponent implements AfterViewInit {\n\n  private _box: HTMLElement;\n  get box(): HTMLElement {\n    if (!this._box) {\n      this._box = document.getElementById('box');\n    }\n    return this._box;\n  }\n\n  private readonly afterViewInit$ = new Subject();\n\n  readonly rendered$ = new Subject<number>();\n  readonly updateClick = new Subject();\n  readonly content$ = this.updateClick.pipe(\n    startWith(false),\n    scan(a => !a, false),\n    map(b => b ? sentence() : paragraph()),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n\n  readonly calculatedAfterRender$ = this.afterViewInit$.pipe(\n    switchMap(() => this.rendered$),\n    map(() => this.box.getBoundingClientRect().height)\n  );\n\n  // afterViewInit$ is needed, otherwise the ViewChild would not be ready\n  readonly calculatedAfterValue$ = this.afterViewInit$.pipe(\n    take(1),\n    switchMapTo(concat(\n      this.rendered$.pipe(take(1)),\n      this.content$.pipe(\n        map(() => this.box.getBoundingClientRect().height)\n      )\n      )\n    )\n  );\n\n  constructor(\n    private cdRef: ChangeDetectorRef\n  ) {\n  }\n\n  reset() {\n    this.cdRef.detectChanges();\n  }\n\n  ngAfterViewInit(): void {\n    this.afterViewInit$.next();\n    this.reset();\n  }\n\n}\n\nfunction sentence(): string {\n  return text(3, 12);\n}\n\n\nfunction paragraph(): string {\n  return text(35, 102);\n}\n\nfunction text(min: number, max: number): string {\n  return 'Lorem Ipsum '.repeat(Math.ceil(Math.max(min, Math.random() * max)));\n}\n"],"sourceRoot":"webpack:///"}